loader.preload = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ entrypoint }}"
loader.argv0_override = "{{ entrypoint }}"

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}"
# Preload libunwind so that it has precedence over libstdc++ when resolving stack-unwinding routines
loader.env.LD_PRELOAD = "libunwind.so.8"

fs.mount.gramine_lib.type = "chroot"
fs.mount.gramine_lib.path = "/lib"
fs.mount.gramine_lib.uri = "file:{{ gramine.runtimedir() }}"

fs.mount.entrypoint.type = "chroot"
fs.mount.entrypoint.path = "{{ entrypoint }}"
fs.mount.entrypoint.uri = "file:{{ binary_dir }}/{{ entrypoint }}"

fs.mount.host_lib.type = "chroot"
fs.mount.host_lib.path = "{{ arch_libdir }}"
fs.mount.host_lib.uri = "file:{{ arch_libdir }}"

fs.mount.host_usr_lib.type = "chroot"
fs.mount.host_usr_lib.path = "/usr/{{ arch_libdir }}"
fs.mount.host_usr_lib.uri = "file:/usr/{{ arch_libdir }}"

sgx.thread_num = 8
sgx.nonpie_binary = true
sgx.debug = true

sgx.trusted_files = [
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/libgcc_s.so.1",
  "file:/usr{{ arch_libdir }}/libstdc++.so.6",
  "file:/usr{{ arch_libdir }}/libunwind.so.8",
  "file:{{ arch_libdir }}/liblzma.so.5",
  "file:{{ binary_dir }}/{{ entrypoint }}",
]
